// Pull in the runtime support for `lttng-ust-rs`
#[macro_use]
extern crate lttng_ust;

// Import the tracepoints generated by our `build.rs` file.
import_tracepoints!(
    concat!(env!("OUT_DIR"), "/tracepoints.rs"),
    tracepoints
);

fn main() {
    println!("Hello, world!");
    println!("Press enter to continue...");

    // Wait for the user to press enter, which gives them a chance to
    // list out the userspace tracepoints. See
    // http://lttng.org/docs/v2.10/#doc-tracing-your-own-user-application
    // for a more detailed explanation of how to do this.
    wait_for_enter();

    tracepoints::hello_world::my_first_tracepoint(23, "hello world");

    // Show off Rust a little: we don't need the fully qualified name of the
    // tracepoint everywhere =)
    use tracepoints::hello_world::my_first_tracepoint;

    for (i, s) in std::env::args().enumerate() {
        my_first_tracepoint(i as i32, &s);
    }

    println!("Quitting now!");
    let num_args = std::env::args().len();
    my_first_tracepoint((num_args * num_args) as i32, "x^2");
}

// A small helper function to emulate the behavior of getchar().
// Nothing interesting to see here really
fn wait_for_enter() {
    use std::io;
    let mut input = String::new();

    io::stdin().read_line(&mut input)
        .ok()
        .expect("Couldn't read line from stdin");
}
